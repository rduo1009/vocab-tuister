name: build
on:
  push:
    tags:
      - "v*.*.*-*"

defaults:
  run:
    shell: bash

permissions:
  contents: write

jobs:
  build:
    name: Build project
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-22.04-arm, macos-14]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          submodules: "recursive"

      - uses: actions/setup-python@v5.6.0
        with:
          python-version-file: '.python-version'

      - uses: actions/setup-go@v5.5.0
        with:
          go-version-file: 'go.mod'

      - name: Install deps
        run: |
          python3 -m pip install --user pipx
          pipx ensurepath
          pipx install poetry poethepoet
          pipx inject poetry "poetry-dynamic-versioning[plugin]"

      - name: Setup project
        if: ${{ matrix.os == 'windows-2019' }}
        run: |
          python3 -m venv .venv
          source .venv/Scripts/activate
          go install ./src/_vendor/mkunion/cmd/mkunion
          go install ./src/_vendor/go-jsonstruct/cmd/gojsonstruct
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Setup project
        if: ${{ matrix.os != 'windows-2019' }}
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          go install ./src/_vendor/mkunion/cmd/mkunion
          go install ./src/_vendor/go-jsonstruct/cmd/gojsonstruct
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Build project
        if: ${{ matrix.os != 'macos-14' }}
        run: |
          poetry config virtualenvs.in-project true
          poe build

      - name: Build project
        if: ${{ matrix.os == 'macos-14' }}
        run: |
          poetry config virtualenvs.in-project true
          poe build --target-arch universal2

      - name: Release
        uses: softprops/action-gh-release@v2.3.2
        with:
          files: |
            dist/*
