name: build
on: workflow_dispatch

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build project
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          [
            ubuntu-22.04,
            ubuntu-22.04-arm,
            macos-13,
            macos-14,
            windows-2019,
            windows-11-arm,
          ]
        python:
          - 3.13.1
      fail-fast: false

    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          submodules: "recursive"

      - uses: actions/setup-python@v5.6.0
        with:
          python-version: "3.13.1"

      - uses: actions/setup-go@v5.4.0
        with:
          go-version: "1.23.4"

      - name: Install deps
        run: |
          python --version
          which python
          python -m pip install --user pipx
          which pipx
          pipx ensurepath
          pipx install poetry poethepoet
          pipx inject poetry "poetry-dynamic-versioning[plugin]"
          which poetry

      - name: Add pipx poetry to PATH for PowerShell
        if: ${{ startsWith(matrix.os, 'windows') }}
        run: |
          $pipxBin = "$env:USERPROFILE\.local\Scripts"
          echo "##[debug]Adding $pipxBin to PATH"
          echo "$pipxBin" | Out-File -Append -Encoding ascii $env:GITHUB_PATH
        shell: pwsh

      - name: Setup project
        if: ${{ !startsWith(matrix.os, 'windows') }}
        run: |
          poetry config virtualenvs.in-project true
          go install ./src/_vendor/mkunion/cmd/mkunion
          go install ./src/_vendor/go-jsonstruct/cmd/gojsonstruct
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Setup project
        if: ${{ matrix.os == 'windows-2019' }}
        run: |
          poetry config virtualenvs.in-project true
          poetry env use "C:\hostedtoolcache\windows\Python\3.13.1\x64\python.exe"
          go install ./src/_vendor/mkunion/cmd/mkunion
          go install ./src/_vendor/go-jsonstruct/cmd/gojsonstruct
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Setup project
        if: ${{ matrix.os == 'windows-11-arm'}}
        run: |
          poetry config virtualenvs.in-project true
          poetry env use "C:\hostedtoolcache\windows\Python\3.13.1\arm64\python.exe"
          go install ./src/_vendor/mkunion/cmd/mkunion
          go install ./src/_vendor/go-jsonstruct/cmd/gojsonstruct
          echo PATH=$PATH >> $GITHUB_ENV

      # HACK: Have to workaround using poe as there are weird errors for some reason
      - name: Build project
        if: ${{ startsWith(matrix.os, 'windows') }}
        run: |
          scripts/build-gh.ps1
        shell: pwsh

      - name: Build project
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: |
          poe build

      - name: Build project
        if: ${{ matrix.os == 'macos-14' }}
        run: |
          poe build --target-arch arm64

      - name: Build project
        if: ${{ matrix.os == 'macos-13' }}
        run: |
          poe build --target-arch x86_64

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: build-${{ matrix.os }}
          path: dist/*
