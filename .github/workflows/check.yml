name: check
on: push

concurrency:
  group: check-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-python:
    name: test with python
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: "recursive"

      - name: Verify .python-version file
        run: |
          if [ ! -s .python-version ]; then echo ".python-version is missing or empty" >&2; exit 1; else echo "Found .python-version:"; cat .python-version; fi

      - uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install tox
        run: python -m pip install tox-gh>=1.2

      - name: Install deps
        run: tox -vv --notest

      - name: Run test suite
        run: tox --skip-pkg-install

  test-integration-python:
    name: integration test with python
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: "recursive"

      - name: Verify .python-version file
        run: |
          if [ ! -s .python-version ]; then echo ".python-version is missing or empty" >&2; exit 1; else echo "Found .python-version:"; cat .python-version; fi

      - uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install deps
        run: |
          sudo apt-get update -y
          sudo apt-get install -y pipx
          pipx install poetry
          poetry install

      - name: Run integration tests
        id: run-tests
        run: |
          poetry run pytest -m 'integration' -n0
        continue-on-error: true

      - name: Update test data
        if: steps.run-tests.outcome == 'failure'
        run: poetry run pytest --pythonhashseed 1 --snapshot-update -m 'integration' -n0

      - name: Upload changed files
        if: steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v4.6.2
        with:
          name: changed-files
          path: |
            tests/integration/server_integration/__snapshots__/server_integration_test.ambr

      - name: Fail workflow if applicable
        if: steps.run-tests.outcome == 'failure'
        run: exit 1

  test-golang:
    name: test with golang
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: "recursive"

      - name: Verify go.mod file
        run: |
          if [ ! -s go.mod ]; then echo "go.mod is missing or empty" >&2; exit 1; else echo "Found go.mod:"; grep '^go ' go.mod; fi

      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Install deps
        run: go mod download

      - name: Run test suite
        id: run-tests
        run: go test ./src/...
        continue-on-error: true

      - name: Update test data
        if: steps.run-tests.outcome == 'failure'
        run: go test ./src/client/internal/... -update

      - name: Upload changed files
        if: steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: changed-files
          path: |
            src/client/internal/configtui/testdata/
            src/client/internal/listtui/testdata
            src/client/internal/sessiontui/testdata

      - name: Fail workflow if applicable
        if: steps.run-tests.outcome == 'failure'
        run: exit 1

  test-integration-golang:
    name: integration test with golang
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: "recursive"

      - name: Verify go.mod file
        run: |
          if [ ! -s go.mod ]; then echo "go.mod is missing or empty" >&2; exit 1; else echo "Found go.mod:"; grep '^go ' go.mod; fi

      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Install deps
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ffmpeg pipx
          sudo snap install ttyd --classic
          pipx install dunamai
          go mod download

      - name: Run integration tests
        run: ./tests/integration/client_integration/client-integration-tests.sh

      - name: Upload changed files
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: changed-files
          path: tests/integration/client_integration/testdata/
