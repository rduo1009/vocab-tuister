name: check
on: push

concurrency:
  group: check-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-python:
    name: test with python ${{ matrix.py }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        py:
          - "3.13.1"

    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          submodules: "recursive"

      # - name: Cache tox folder
      #   id: cache-tox
      #   uses: actions/cache@v4.1.1
      #   with:
      #     path: ".tox"
      #     key: ${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml','tox.ini','poetry.lock') }}

      - uses: actions/setup-python@v5.4.0
        with:
          python-version: ${{ matrix.py }}

      - name: Create test_output directory
        run: mkdir tests/lego_test/testdata/test_output

      - name: Install tox
        run: python -m pip install tox-gh>=1.2

      - name: Install deps
        # if: steps.cache-tox.outputs.cache-hit != 'true'
        run: tox -vv --notest

      - name: Run test suite
        run: tox --skip-pkg-install

  test-integration-python:
    name: integration test with python ${{ matrix.py }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        py:
          - "3.13.1"
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          submodules: "recursive"

      - uses: actions/setup-python@v5.4.0
        with:
          python-version: ${{ matrix.py }}

      - name: Install deps
        run: |
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          brew install pipx
          pipx install poetry==1.8.5
          poetry install

      - name: Run integration tests
        run: |
          poetry run pytest -m 'integration' -n0

  test-golang:
    name: test with golang ${{ matrix.go }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go:
          - "1.24.0"

    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          submodules: "recursive"

      - uses: actions/setup-go@v5.3.0
        with:
          go-version: ${{ matrix.go }}

      - name: Install deps
        run: go mod download

      - name: Run test suite
        run: go test ./src/...

  test-integration-golang:
    name: integration test with golang ${{ matrix.go }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go:
          - "1.24.0"

    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          submodules: "recursive"

      - uses: actions/setup-go@v5.3.0
        with:
          go-version: ${{ matrix.go }}

      - name: Install deps
        run: |
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          brew install ffmpeg ttyd
          go mod download

      - name: Run integration tests
        run: ./tests/integration/client_integration/client-integration-tests.sh
