name: "Copilot Setup Steps"

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  copilot-setup-steps:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          submodules: "recursive"

      - name: Install and cache apt deps
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: pipx golangci-lint
          version: 1.0

      # -----------------------------------------------------------------------
      # PYTHON

      - uses: actions/setup-python@v6
        with:
          python-version-file: ".python-version"

      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local # Poetry installs here on Ubuntu
          key: poetry-${{ runner.os }}-1

      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Configure Poetry if cached
        if: steps.cached-poetry.outputs.cache-hit == 'true'
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          poetry config installer.parallel true

      - name: Cache Poetry virtualenv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-

      - name: Install project deps
        run: poetry install --no-interaction --no-root

      - name: Install dev deps using pipx
        run: |
          pipx install dunamai poethepoet

      # -----------------------------------------------------------------------
      # GO

      - uses: actions/setup-go@v6
        with:
          go-version-file: "go.mod"

      - name: Install go project deps
        run: go mod download
        env:
          GOEXPERIMENT: jsonv2
