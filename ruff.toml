line-length = 79
unsafe-fixes = true
target-version = "py313"
exclude = ["src/_vendor/**"]

[lint]
preview = true
select = ["ALL"]
ignore = [
    # Managed by formatters
    "E",
    "W",
    "I",

    # Actual uses
    "S101",    # assertions
    "PLC0414", # 'useless' import aliases

    # Formatting
    "ERA001", # commented out code
    "COM812", # trailing commas

    # Documentation
    "DOC502", # extraneous docstring exceptions
    "D105",   # magic method docstrings
    "CPY001", # no copyright
    "FIX001", # fixme comments
    "FIX002", # todo comments
    "FIX004", # hack comments
    "TD001",  # banning `fixme`
    "TD002",  # missing author in todo
    "TD003",  # missing issue link in todo

    # Too strict
    "EM102",   # fstring in exception
    "EM101",   # raw string in exception
    "TRY003",  # use args in exceptions
    "ANN401",  # `Any` in function arguments
    "S301",    # using `pickle`
    "S311",    # using `random`
    "S403",    # importing `pickle`
    "TID252",  # relative imports
    "PLW1514", # encoding in `open()`

    # Complexity
    "PLR0911", # too many `return`s
    "PLR0912", # too many branches
    "PLR0913", # too many arguments
    "C901",    # mccabe complexity
]
extend-select = ["W505"] # doc line too long

[lint.per-file-ignores]
# Function annotations
"src/server/app.py" = ["ANN"]

# Magic value comparisons
"src/core/accido/_class_*.py" = ["PLR2004"]
"src/core/lego/reader.py" = ["PLR2004"]
"src/core/rogo/rules.py" = ["PLR2004"]
"src/core/rogo/asker.py" = ["PLR2004"]

[lint.pydocstyle]
convention = "numpy"

[lint.flake8-type-checking]
quote-annotations = true
strict = true

[lint.isort]
combine-as-imports = true

[format]
preview = true
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = true
docstring-code-format = true
docstring-code-line-length = 72
