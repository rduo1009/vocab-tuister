// Code generated by mkunion. DO NOT EDIT.
package schema

import (
	"github.com/widmogrod/mkunion/x/shape"
)

func init() {
	shape.Register(LocationAnythingShape())
	shape.Register(LocationFieldShape())
	shape.Register(LocationIndexShape())
	shape.Register(LocationShape())
}

//shape:shape

func LocationShape() shape.Shape {
	return &shape.UnionLike{
		Name:          "Location",
		PkgName:       "schema",
		PkgImportName: "github.com/widmogrod/mkunion/x/schema",
		Variant: []shape.Shape{
			LocationFieldShape(),
			LocationIndexShape(),
			LocationAnythingShape(),
		},
	}
}

func LocationFieldShape() shape.Shape {
	return &shape.StructLike{
		Name:          "LocationField",
		PkgName:       "schema",
		PkgImportName: "github.com/widmogrod/mkunion/x/schema",
		Fields: []*shape.FieldLike{
			{
				Name: "Name",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Location",
			},
		},
	}
}

func LocationIndexShape() shape.Shape {
	return &shape.StructLike{
		Name:          "LocationIndex",
		PkgName:       "schema",
		PkgImportName: "github.com/widmogrod/mkunion/x/schema",
		Fields: []*shape.FieldLike{
			{
				Name: "Index",
				Type: &shape.PrimitiveLike{
					Kind: &shape.NumberLike{
						Kind: &shape.Int{},
					},
				},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Location",
			},
		},
	}
}

func LocationAnythingShape() shape.Shape {
	return &shape.StructLike{
		Name:          "LocationAnything",
		PkgName:       "schema",
		PkgImportName: "github.com/widmogrod/mkunion/x/schema",
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Location",
			},
		},
	}
}
