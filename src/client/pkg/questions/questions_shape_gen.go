// Code generated by mkunion. DO NOT EDIT.
package questions

import (
	"github.com/widmogrod/mkunion/x/shape"
)

func init() {
	shape.Register(MultipleChoiceEngToLatQuestionShape())
	shape.Register(MultipleChoiceLatToEngQuestionShape())
	shape.Register(ParseWordCompToLatQuestionShape())
	shape.Register(ParseWordLatToCompQuestionShape())
	shape.Register(PrincipalPartsQuestionShape())
	shape.Register(QuestionShape())
	shape.Register(QuestionsShape())
	shape.Register(TypeInEngToLatQuestionShape())
	shape.Register(TypeInLatToEngQuestionShape())
}

//shape:shape

func QuestionShape() shape.Shape {
	return &shape.UnionLike{
		Name: "Question",
		PkgName: "questions",
		PkgImportName: "",
		Variant: []shape.Shape{
			MultipleChoiceEngToLatQuestionShape(),
			MultipleChoiceLatToEngQuestionShape(),
			ParseWordCompToLatQuestionShape(),
			ParseWordLatToCompQuestionShape(),
			PrincipalPartsQuestionShape(),
			TypeInEngToLatQuestionShape(),
			TypeInLatToEngQuestionShape(),
		},
	}
}

func MultipleChoiceEngToLatQuestionShape() shape.Shape {
	return &shape.StructLike{
		Name: "MultipleChoiceEngToLatQuestion",
		PkgName: "questions",
		PkgImportName: "",
		Fields: []*shape.FieldLike{
			{
				Name: "Answer",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "answer",
					},
				},
			},
			{
				Name: "Choices",
				Type: &shape.ListLike{
					Element: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "choices",
					},
				},
			},
			{
				Name: "Prompt",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "prompt",
					},
				},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Question",
			},
		},
	}
}

func MultipleChoiceLatToEngQuestionShape() shape.Shape {
	return &shape.StructLike{
		Name: "MultipleChoiceLatToEngQuestion",
		PkgName: "questions",
		PkgImportName: "",
		Fields: []*shape.FieldLike{
			{
				Name: "Answer",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "answer",
					},
				},
			},
			{
				Name: "Choices",
				Type: &shape.ListLike{
					Element: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "choices",
					},
				},
			},
			{
				Name: "Prompt",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "prompt",
					},
				},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Question",
			},
		},
	}
}

func ParseWordCompToLatQuestionShape() shape.Shape {
	return &shape.StructLike{
		Name: "ParseWordCompToLatQuestion",
		PkgName: "questions",
		PkgImportName: "",
		Fields: []*shape.FieldLike{
			{
				Name: "Answers",
				Type: &shape.ListLike{
					Element: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "answers",
					},
				},
			},
			{
				Name: "Components",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "components",
					},
				},
			},
			{
				Name: "MainAnswer",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "main_answer",
					},
				},
			},
			{
				Name: "Prompt",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "prompt",
					},
				},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Question",
			},
		},
	}
}

func ParseWordLatToCompQuestionShape() shape.Shape {
	return &shape.StructLike{
		Name: "ParseWordLatToCompQuestion",
		PkgName: "questions",
		PkgImportName: "",
		Fields: []*shape.FieldLike{
			{
				Name: "Answers",
				Type: &shape.ListLike{
					Element: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "answers",
					},
				},
			},
			{
				Name: "DictionaryEntry",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "dictionary_entry",
					},
				},
			},
			{
				Name: "MainAnswer",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "main_answer",
					},
				},
			},
			{
				Name: "Prompt",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "prompt",
					},
				},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Question",
			},
		},
	}
}

func PrincipalPartsQuestionShape() shape.Shape {
	return &shape.StructLike{
		Name: "PrincipalPartsQuestion",
		PkgName: "questions",
		PkgImportName: "",
		Fields: []*shape.FieldLike{
			{
				Name: "PrincipalParts",
				Type: &shape.ListLike{
					Element: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "principal_parts",
					},
				},
			},
			{
				Name: "Prompt",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "prompt",
					},
				},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Question",
			},
		},
	}
}

func TypeInEngToLatQuestionShape() shape.Shape {
	return &shape.StructLike{
		Name: "TypeInEngToLatQuestion",
		PkgName: "questions",
		PkgImportName: "",
		Fields: []*shape.FieldLike{
			{
				Name: "Answers",
				Type: &shape.ListLike{
					Element: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "answers",
					},
				},
			},
			{
				Name: "MainAnswer",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "main_answer",
					},
				},
			},
			{
				Name: "Prompt",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "prompt",
					},
				},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Question",
			},
		},
	}
}

func TypeInLatToEngQuestionShape() shape.Shape {
	return &shape.StructLike{
		Name: "TypeInLatToEngQuestion",
		PkgName: "questions",
		PkgImportName: "",
		Fields: []*shape.FieldLike{
			{
				Name: "Answers",
				Type: &shape.ListLike{
					Element: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "answers",
					},
				},
			},
			{
				Name: "MainAnswer",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "main_answer",
					},
				},
			},
			{
				Name: "Prompt",
				Type: &shape.PrimitiveLike{Kind: &shape.StringLike{}},
				Tags: map[string]shape.Tag{
					"json": {
						Value: "prompt",
					},
				},
			},
		},
		Tags: map[string]shape.Tag{
			"mkunion": {
				Value: "Question",
			},
		},
	}
}
//shape:shape
func QuestionsShape() shape.Shape {
	return &shape.AliasLike{
		Name: "Questions",
		PkgName: "questions",
		PkgImportName: "",
		Type: &shape.ListLike{
			Element: &shape.RefName{
				Name: "Question",
				PkgName: "questions",
				PkgImportName: "",
			},
		},
	}
}
