from collections import OrderedDict as OrderedDict

from _typeshed import Incomplete

class constant:
    value: Incomplete
    __doc__: Incomplete
    def __init__(
        self, value: Incomplete, doc: Incomplete | None = None
    ) -> None: ...
    def __get__(self, *args: Incomplete) -> Incomplete: ...
    def __and__(self, other: Incomplete) -> Incomplete: ...
    def __rand__(self, other: Incomplete) -> Incomplete: ...
    def __invert__(self) -> Incomplete: ...
    def __or__(self, other: Incomplete) -> Incomplete: ...
    def __ror__(self, other: Incomplete) -> Incomplete: ...
    def __xor__(self, other: Incomplete) -> Incomplete: ...
    def __rxor__(self, other: Incomplete) -> Incomplete: ...
    def __abs__(self) -> Incomplete: ...
    def __add__(self, other: Incomplete) -> Incomplete: ...
    def __radd__(self, other: Incomplete) -> Incomplete: ...
    def __neg__(self) -> Incomplete: ...
    def __pos__(self) -> Incomplete: ...
    def __rdiv__(self, other: Incomplete) -> Incomplete: ...
    def __floordiv__(self, other: Incomplete) -> Incomplete: ...
    def __rfloordiv__(self, other: Incomplete) -> Incomplete: ...
    def __truediv__(self, other: Incomplete) -> Incomplete: ...
    def __rtruediv__(self, other: Incomplete) -> Incomplete: ...
    def __lshift__(self, other: Incomplete) -> Incomplete: ...
    def __rlshift__(self, other: Incomplete) -> Incomplete: ...
    def __rshift__(self, other: Incomplete) -> Incomplete: ...
    def __rrshift__(self, other: Incomplete) -> Incomplete: ...
    def __mod__(self, other: Incomplete) -> Incomplete: ...
    def __rmod__(self, other: Incomplete) -> Incomplete: ...
    def __mul__(self, other: Incomplete) -> Incomplete: ...
    def __rmul__(self, other: Incomplete) -> Incomplete: ...
    def __pow__(self, other: Incomplete) -> Incomplete: ...
    def __rpow__(self, other: Incomplete) -> Incomplete: ...
    def __sub__(self, other: Incomplete) -> Incomplete: ...
    def __rsub__(self, other: Incomplete) -> Incomplete: ...
    name: Incomplete
    clsname: Incomplete
    def __set_name__(
        self, ownerclass: Incomplete, name: Incomplete
    ) -> None: ...
